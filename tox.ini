[tox]
minversion = 3.7.0
skip_missing_interpreters = true
# tox_pip_extensions_ext_venv_update = true
toxworkdir={env:TOX_WORK_DIR:.tox}
envlist = pypy3{6},py3{7,8},lint,style,type,sec,pkg

[testenv]
description = unit tests
deps =
    coverage == 4.5.4
    pytest == 5.2.2
    pytest-cov == 2.8.1
    pytest-xdist == 1.30.0
commands =
    pytest -c ./tox.ini \
        --cov c7n_broom \
        --cov-report=xml:{toxworkdir}/coverage-{envname}.xml \
        --cov-report=html:{toxworkdir}/htmlcov-{envname} \
        --junitxml {toxworkdir}/pytest-{envname}.junit.xml \
        -n={env:PYTEST_XDIST_PROC_NR:auto} \
        {posargs}

[testenv:lint]
description = static analysis
basepython = python3
deps =
    pylint == 2.4.2
    isort[pyproject] == 4.3.21
    pytest == 5.2.2
commands = pylint src/ setup.py tests/

[testenv:style]
description = style checking
basepython = python3
skip_install = true
deps =
    black == 19.1sor0b0
    isort[pyproject] == 4.3.21
commands =
    black --check src/ setup.py tests/
    isort --check-only --recursive src/ setup.py tests/

[testenv:type]
description = type checking
basepython = python3
deps =
    pytype == 2019.05.31
commands = pytype src/

[testenv:sec]
description = security checks
basepython = python3
skip_install = true
deps =
    bandit == 1.6.0
    pipenv == 2018.11.26
commands =
    pipenv check
    bandit --recursive src/

[testenv:pkg]
description = check distribution package
basepython = python3
skip_install = true
deps =
    pyroma == 2.5
    readme_renderer[md] == 24.0
    twine == 1.12.1
commands_pre =
    python3 setup.py sdist bdist_wheel
commands =
    pyroma .
    twine check dist/*

[pytest]
minversion = 5.2
testpaths = tests
addopts = --verbosity=2 --showlocals -ra --tb=short --cov-report=term
log_cli=true
log_level=DEBUG
